{"version":3,"sources":["Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","React","useState","count","setCount","singleDigitNumber","toString","split","className","onClick","e","target","increment","map","num","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAkCeA,EAhCC,WAAO,IAAD,EACMC,IAAMC,SAAS,GADrB,mBACbC,EADa,KACNC,EADM,KAQdC,EAAoBF,EAAMG,WAAWC,MAAM,IAEjD,OACE,mCACE,sBAAKC,UAAU,oBAAoBC,QAAS,SAACC,GAAD,OAV9B,SAACA,GACU,QAAvBA,EAAEC,OAAOH,WACXJ,EAASD,EAAQ,GAQkCS,CAAUF,IAA7D,UACE,qBAAKF,UAAU,kBAAf,SACGH,EAAkBQ,KAAI,SAACC,EAAKC,GAC3B,OACE,qBAAiBP,UAAU,QAA3B,SACGM,GADOC,QAMhB,qBAAKP,UAAU,gBAAf,SACE,wBAAQA,UAAU,MAAMC,QAAS,kBAAML,EAAS,IAAhD,2B,MCZKY,MAVf,WACE,OACE,mCACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,SCKOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.02e7f183.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Counter = () => {\n  const [count, setCount] = React.useState(0);\n  const increment = (e) => {\n    if (e.target.className !== \"btn\") {\n      setCount(count + 1);\n    }\n  };\n\n  const singleDigitNumber = count.toString().split(\"\");\n\n  return (\n    <>\n      <div className=\"counter-container\" onClick={(e) => increment(e)}>\n        <div className=\"panel-container\">\n          {singleDigitNumber.map((num, index) => {\n            return (\n              <div key={index} className=\"panel\">\n                {num}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"btn-container\">\n          <button className=\"btn\" onClick={() => setCount(0)}>\n            Reset\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Counter;\n","import Counter from \"./Counter\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <Counter />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}